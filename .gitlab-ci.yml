variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  LM_JAVA_VERSION: 11
  SAST_JAVA_VERSION: 11

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - .m2/repository

stages:
  - build
  - test
  - visualize
  - deploy

include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Management.gitlab-ci.yml
  - template: Secret-Detection.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml

code_navigation:
  stage: test
  image: haynes/lsifjava:latest
  script:
    - /opt/lsifjava/bin/lsifjava -projectRoot ./ -out dump.lsif
    - ls -al
  artifacts:
    reports:
      lsif: dump.lsif
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      allow_failure: true

.build:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS clean org.jacoco:jacoco-maven-plugin:prepare-agent test jacoco:report'
    - 'cd target/site/jacoco/'
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' jacoco.csv
  artifacts:
    paths:
      - target/site/jacoco/jacoco.xml
    reports:
      junit:
        - $CI_PROJECT_DIR/target/surefire-reports/TEST-*.xml

# Build and Test using JDK8
test:jdk8:
  extends: .build
  image: maven:3.6.3-jdk-8

# Build and Test using JDK11
test:jdk11:
  extends: .build
  image: maven:3.6.3-jdk-11
  
# Build and Test using JDK13
test:jdk13:
  extends: .build
  image: maven:3.6.3-jdk-13

deploy:snapshot:
  stage: deploy
  image: maven:3.6.3-jdk-8
  script:
    - 'export GPG_TTY=$(tty)'
    - '(echo $GPG_PASSPHRASE | gpg --batch --no-tty --yes --import <(echo "$GPG_PRIVATE_KEY")) >/dev/null'
    - 'mvn $MAVEN_CLI_OPTS clean deploy -s ci_mavensettings.xml -Prelease -DskipTests'
  only:
    refs:
      - master

deploy:release:
  stage: deploy
  image: maven:3.6.3-jdk-8
  script:
    - 'export GPG_TTY=$(tty)'
    - '(echo $GPG_PASSPHRASE | gpg --batch --no-tty --yes --import <(echo "$GPG_PRIVATE_KEY")) >/dev/null'
    - 'mvn versions:set -DgenerateBackupPoms=false -DnewVersion=$CI_BUILD_REF_NAME'
    - 'mvn $MAVEN_CLI_OPTS clean deploy -s ci_mavensettings.xml -Prelease -DskipTests'
  only:
    - tags

.codecoverage:
  stage: visualize
  image: haynes/haynes/jacoco2cobertura:1.0.0
  script:
    - 'python /opt/cover2cover.py target/site/jacoco/jacoco.xml'

coverage:jdk11:
  extends: .codecoverage
  needs: ["test:jdk11"]
  dependencies:
    - test:jdk11
